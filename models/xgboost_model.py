# -*- coding: utf-8 -*-
"""xgboost_model

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1KxXasjoHzIfZymV26hauwIrHr5iDfSgC
"""

from sklearn.neighbors import KNeighborsRegressor
import xgboost as xgb
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.model_selection import train_test_split, GridSearchCV, KFold
import matplotlib.pyplot as plt
import numpy as np
from google.colab import files
import pandas as pd
import json

!pip install xgboost

uploaded = files.upload()
df = pd.read_csv(next(iter(uploaded)))


target_column = "price"
X = df.drop(target_column, axis=1)
y = df[target_column]


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)


scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

xgboost = xgb.XGBRegressor()
xgb_params = {
    "learning_rate": [0.01, 0.1, 0.3],
    "max_depth": [3, 5, 7],
    "n_estimators": [100, 200],
    "subsample": [0.8, 1.0]
}
xgb_grid = GridSearchCV(xgboost, xgb_params, scoring="neg_mean_squared_error", cv=KFold(n_splits=5, shuffle=True, random_state=42))
xgb_grid.fit(X_train_scaled, y_train)
xgb_best = xgb_grid.best_estimator_

xgb_pred = xgb_best.predict(X_test_scaled)
xgb_mse = mean_squared_error(y_test, xgb_pred)
xgb_rmse = np.sqrt(xgb_mse)
xgb_r2 = r2_score(y_test, xgb_pred)

#  results

print("XGBoost MSE:", xgb_mse)
print("XGBoost RMSE:", xgb_rmse)
print("XGBoost R2:", xgb_r2)
best_params = {

    "XGBoost": xgb_grid.best_params_
}

with open("best_params.json", "w") as json_file:
    json.dump(best_params, json_file, indent=4)

print("Best parameters saved to 'best_params.json'")

files.download('best_params.json')